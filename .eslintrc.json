{
  "extends": [
    "next/core-web-vitals",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier",
    "plugin:tailwindcss/recommended"
  ],
  "plugins": ["tailwindcss"],
  "rules": {
    "react/jsx-key": ["error", { "checkFragmentShorthand": true }],
    //"@next/next/no-img-element": "warn",
    "react/prop-types": "off",
    "import/no-unresolved": "off",
    "import/no-cycle": "error",
    "tailwindcss/no-custom-classname": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "tailwindcss/classnames-order": "off",
    "@typescript-eslint/no-empty-object-type": "warn",
    "allowInterfaces": "off"
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    },
    "tailwindcss": {
      // These are the default values but feel free to customize
      "callees": ["classnames", "clsx", "ctl"],
      "config": "../../tailwind.config.js", // returned from `loadConfig()` utility if not provided
      "cssFiles": [
        "**/*.css",
        "!**/node_modules",
        "!**/.*",
        "!**/dist",
        "!**/build"
      ],
      "cssFilesRefreshRate": 5000,
      "removeDuplicates": true,
      "skipClassAttribute": false,
      "whitelist": [
        "@container",
        "fas",
        "fa",
        "fa\\-.+:?.+",
        "u",
        "u\\-.+:?.+",
        "z\\-.+:?.+",
        "errors",
        "active"
      ],
      "tags": [], // can be set to e.g. ['tw'] for use in tw`bg-blue`
      "classRegex": "^class(Name)?$" // can be modified to support custom attributes. E.g. "^tw$" for `twin.macro`
    }
  },
  "ignorePatterns": ["**/components/ui/**"]
}
